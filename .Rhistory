rm(list = ls())
##########################################################
################ Mathematical Operations #################
################ +,-,*,/,^,%% #################
##########################################################
# Addition
22+23
# Substraction
23-1
# Power
2+3^2
(2+2)^4
sqrt(2)
log(2)  # default base is exp(1)
# Module (Returns remainder of integer division)
21%%4
##########################################################
####### Different ways to assign value to variable #######
##########################################################
tmp = 5
print(tmp)
tmp <- 10
print(tmp)
15 -> tmp
print(tmp)
##########################################################
####### Assiging a value and performing operations #######
##########################################################
x = 5
rm(list =ls())
##########################################################
####### Assiging a value and performing operations #######
##########################################################
x = 5
##########################################################
####### Assiging a value and performing operations #######
##########################################################
x = 5
x = 6
y = 10
z <- x+y
z
# To create sequence of nummbers
seq(1,5, by=.5)
#Repeating a number
rep(1,10)
##########################################################
###############   Evaluation and Printing    #############
##########################################################
# The <- symbol is the assignment operator.
x <- 5 	## nothing printed
x 		## auto-printing occurs
print(x) 	## explicit printing
# The : operator is used to create integer sequences.
x <- 1:20
x
##########################################################
################ Creating Vectors ########################
##########################################################
# The c() function can be used to create vectors of objects.
x <- c(0.5, 0.6) ## numeric
x <- c(TRUE, FALSE) ## logical
x <- c(T, F) ## logical
x <- c("a", "b", "c") ## character
x <- 9:29 ## integer
x <- c(1+0i, 2+4i) ## complex
#Using the vector() function
x <- vector("numeric", length = 10)
x
##########################################################
################ Mixing Objects ##########################
##########################################################
y <- c(1.7, "a") ## character
y <- c(TRUE, 2) ## numeric
y <- c(TRUE, 2,FALSE) ## numeric
y <- c("a", TRUE) ## character
##########################################################
################ Explicit Coercion #######################
##########################################################
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
# Coercion results in NAs.
x <- c("a", "b", "c")
as.numeric(x)
as.logical(x)
x <- c("a", "b", "c", 3)
as.numeric(x)
#################################################################
#### Data Structures (vectors, matrices, Lists & dataframes) ####
#################################################################
v1=c(1,2,3,4,5) #numeric vector
rm(list = ls())
x = seq(-3,3)
x = seq(-5,5)
y = gl(2, 2, 10)
y = gl(2, 3, 10)
y = gl(2, 4, 10)
dt = data.frame(feat1 = x, label = y)
x = seq(-5,4)
y = gl(2, 4, 10)
dt = data.frame(feat1 = x, label = y)
ggplot(dt, aes(x, color = y)) + geom_point() +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
library(ggplot2)
ggplot(dt, aes(x, color = y)) + geom_point() +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(x, color = y)) + geom_line() +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(x, aes(color = y)) + geom_line() +
x = seq(-5,4)
y = gl(2, 4, 10)
dt = data.frame(feat1 = x, label = y)
ggplot(dt, aes(feat1, color = label)) + geom_line() +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, color = label)) + geom_hline() +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, color = label)) + geom_hline(yintercept = 0) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, color = label)) + geom_hline(yintercept = 0) +
geom_point()+
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, color = label)) + geom_hline(yintercept = 0) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, label, color = label)) + geom_hline(yintercept = 0) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, label, color = label)) + geom_point() +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, label, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
dt$sq = dt$x * dt$x
View(dt)
5**2
dt$sq = dt$x ** 2
dt$x ** 2
dt$x
dt$x
dt
dt$sq = dt$feat1 ** 2
ggplot(dt, aes(feat1, sq, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
par(mfrow = c(1,2))
ggplot(dt, aes(feat1, label, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
ggplot(dt, aes(feat1, sq, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1')
x1 = seq(-5,4)
y1 = gl(2,3,10)
y1 = gl(2,2,10)
x1 = seq(-5,4)
y1 = gl(2,2,10)
dt1 = data.frame(feat1 = x1, label = y1)
dt1$sq = dt$feat1 ** 2
ggplot(dt1, aes(feat1, label, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Label')
ggplot(dt1, aes(feat1, sq, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Square of Feature1')
ggplot(dt1, aes(feat1, sq, cube, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Square of Feature1')
dt1$cube = dt$feat1 ** 3
ggplot(dt1, aes(feat1, sq, cube, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Square of Feature1')
ggplot(dt1, aes(feat1, label, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Label')
ggplot(dt1, aes(feat1, sq, cube, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Square of Feature1')
library(ggplot2)
rm(list = ls())
x = seq(-5,4)
y = gl(2, 4, 10)
dt = data.frame(feat1 = x, label = y)
dt$sq = dt$feat1 ** 2
ggplot(dt, aes(feat1, label, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Label')
ggsave("Plot1.png")
ggplot(dt, aes(feat1, sq, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Square of Feature1')
ggsave("Plot2.png")
x1 = seq(-5,4)
y1 = gl(2,2,10)
dt1 = data.frame(feat1 = x1, label = y1)
dt1$sq = dt$feat1 ** 2
dt1$cube = dt$feat1 ** 2 + dt$sq ** 2
ggplot(dt1, aes(feat1, label, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Label')
ggsave("Plot3.png")
ggplot(dt1, aes(feat1, sq, cube, color = label)) + geom_point(size = 4) +
theme_bw(base_family = 'serif', base_size = 16) +
labs(x = 'Feature1', y = 'Square of Feature1')
ggsave("Plot4.png")
getwd()
x1 = c(1,1,1,5,5,5)
y1 = c(1,2,3,1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
plot(x1,y1)
x1 = c(1,1,1,)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4)
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4)
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue")
plot(x4,y4, pch = 10, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue")
points(x4,y4, pch = 10, col = "blue")
plot(x1,y1, pch = 4, col = "blue")
points(x4,y4, pch = 10, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(-1,6))
points(x4,y4, pch = 10, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6))
points(x4,y4, pch = 10, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6))
points(x4,y4, pch = 10, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6))
points(x4,y4, pch = 50, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6))
points(x4,y4, pch = 2, col = "blue")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6))
points(x4,y4, pch = 2, col = "blue")
points(x3,y3, pch = 2, col = "red")
points(x2,y2, pch = 4, col = "red")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6), ylim = c(0,5))
points(x4,y4, pch = 2, col = "blue")
points(x3,y3, pch = 2, col = "red")
points(x2,y2, pch = 4, col = "red")
x1 = c(1,1,1)
y1 = c(1,2,3)
x2 = c(2)
y2 = c(2)
x3 = c(4,4)
y3 = c(1,3)
x4 = c(5,5,5)
y4 = c(1,2,3)
plot(x1,y1, pch = 4, col = "blue", xlim = c(0,6), ylim = c(0,4))
points(x4,y4, pch = 2, col = "blue")
points(x3,y3, pch = 2, col = "red")
points(x2,y2, pch = 4, col = "red")
rm(list = ls())
rm(list = ls())
setwd("C:\\Users\\nayak\\Desktop\\INSOFE\\My_Python_Scripts\\Black_Friday")
train = read.csv("train.csv")
colnames(train)
ggplot(data, aes(y = Purchase, fill = Gender)) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Purchase") +
theme_bw(base_family = 'serif', base_size = 16)
library(ggplot2)
ggplot(data, aes(y = Purchase, fill = Gender)) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Purchase") +
theme_bw(base_family = 'serif', base_size = 16)
ggplot(train, aes(y = Purchase, fill = Gender)) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Purchase") +
theme_bw(base_family = 'serif', base_size = 16)
ggplot(train, aes(y = log10(Purchase))) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Log Purchase") +
theme_bw(base_family = 'serif', base_size = 16)
ggplot(train, aes(y = log10(Purchase))) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Log Purchase", title = "Genderwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16)
ggplot(train, aes(y = log10(Purchase), fill = Gender)) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Log Purchase", title = "Genderwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16)
ggplot(train, aes(y = log10(Purchase), x = Gender)) +
geom_boxplot(aes(fill = Gender), alpha = 0.6) +
labs(x = "Gender", y = "Log Purchase", title = "Genderwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16)
View(train)
colnames(train)
ggplot(train, aes(y = log10(Purchase), x = Age)) +
geom_boxplot(aes(fill = Age), alpha = 0.6) +
labs(x = "Gender", y = "Log Purchase", title = "Agewise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Agewise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = Occupation)) +
geom_boxplot(aes(fill = Occupation), alpha = 0.6) +
labs(x = "Occupation", y = "Log Purchase", title = "Occupationwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Occupationwise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Occupation))) +
geom_boxplot(aes(fill = Occupation), alpha = 0.6) +
labs(x = "Occupation", y = "Log Purchase", title = "Occupationwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Occupationwise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Occupation))) +
geom_boxplot(aes(fill = as.factor(Occupation)), alpha = 0.6) +
labs(x = "Occupation", y = "Log Purchase", title = "Occupationwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Occupationwise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = City_Category)) +
geom_boxplot(aes(fill = City_Category), alpha = 0.3) +
labs(x = "City", y = "Log Purchase", title = "Citywise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Citywise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Stay_In_Current_City_Years))) +
geom_boxplot(aes(fill = as.factor(Stay_In_Current_City_Years)), alpha = 0.3) +
labs(x = "Stay (years)", y = "Log Purchase", title = "Staywise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Staywise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Stay_In_Current_City_Years))) +
geom_boxplot(aes(fill = as.factor(Stay_In_Current_City_Years)), alpha = 0.3) +
labs(x = "Stay (years)", y = "Log Purchase", title = "Staywise Purchase Distribution", legend = "Stay years in city") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Staywise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Marital_Status))) +
geom_boxplot(aes(fill = as.factor(Marital_Status)), alpha = 0.3) +
labs(x = "Marital Status", y = "Log Purchase", title = "Married(1) or Not(0)") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Staywise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Product_Category_1))) +
geom_boxplot(aes(fill = as.factor(Product_Category_1)), alpha = 0.3) +
labs(x = "Product Category 1", y = "Log Purchase", title = "Product Cat 1 wise distribution of purchase") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Cat1wise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Product_Category_2))) +
geom_boxplot(aes(fill = as.factor(Product_Category_2)), alpha = 0.3) +
labs(x = "Product Category 2", y = "Log Purchase", title = "Product Cat 2 wise distribution of purchase") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Cat2wise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Product_Category_3))) +
geom_boxplot(aes(fill = as.factor(Product_Category_3)), alpha = 0.3) +
labs(x = "Product Category 3", y = "Log Purchase", title = "Product Cat 3 wise distribution of purchase") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Cat3wise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = Age)) +
geom_boxplot(aes(fill = Age), alpha = 0.3) +
labs(x = "Age", y = "Log Purchase", title = "Agewise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Agewise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = Gender)) +
geom_boxplot(aes(fill = Gender), alpha = 0.3) +
labs(x = "Gender", y = "Log Purchase", title = "Genderwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Genderwise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Occupation))) +
geom_boxplot(aes(fill = as.factor(Occupation)), alpha = 0.3) +
labs(x = "Occupation", y = "Log Purchase", title = "Occupationwise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Occupationwise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = City_Category)) +
geom_boxplot(aes(fill = City_Category), alpha = 0.3) +
labs(x = "City", y = "Log Purchase", title = "Citywise Purchase Distribution") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Citywise_Purchase_Distribution.png")
ggplot(train, aes(y = log10(Purchase), x = as.factor(Stay_In_Current_City_Years))) +
geom_boxplot(aes(fill = as.factor(Stay_In_Current_City_Years)), alpha = 0.3) +
labs(x = "Stay (years)", y = "Log Purchase", title = "Staywise Purchase Distribution", legend = "Stay years in city") +
theme_bw(base_family = 'serif', base_size = 16) +
ggsave("Staywise_Purchase_Distribution.png")
